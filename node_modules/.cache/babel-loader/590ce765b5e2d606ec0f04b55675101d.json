{"ast":null,"code":"var _jsxFileName = \"/home/bohdan/FrontEnd/React/books/src/components/Dashboard/Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport './dashboard.sass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = ({\n  books\n}) => {\n  _s();\n\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [deletedId, setDeletedId] = useState(null);\n  const [deletedTitle, setDeletedTitle] = useState(null);\n  const {\n    push\n  } = useHistory();\n\n  const confirmDelete = (id, title) => {\n    setDeletedId(id);\n    setDeletedTitle(title);\n    setModalIsOpen(true);\n  };\n\n  const handleDelete = id => {\n    fetch(`http://localhost:8000/books/${id}`, {\n      method: 'DELETE'\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Book title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Author name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ISBN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: books.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: item.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: item.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: item.isbn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => push(`/edit/${item.id}`),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => confirmDelete(item.id, item.title),\n                children: \"Del\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: modalIsOpen,\n      closeTimeoutMS: 0,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Delete \", deletedTitle, \" ?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setModalIsOpen(false);\n          setDeletedTitle(null);\n          setDeletedId(null);\n        },\n        children: \"No\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setModalIsOpen(false);\n          setDeletedTitle(null);\n          setDeletedId(null);\n          handleDelete(deletedId);\n        },\n        children: \"Yes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"BJVYDKyfTKAvQyP3nhC4Nl6R8po=\", false, function () {\n  return [useHistory];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/bohdan/FrontEnd/React/books/src/components/Dashboard/Dashboard.js"],"names":["React","useState","useHistory","Modal","Dashboard","books","modalIsOpen","setModalIsOpen","deletedId","setDeletedId","deletedTitle","setDeletedTitle","push","confirmDelete","id","title","handleDelete","fetch","method","map","item","author","category","isbn"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Modal from 'react-modal';\n\nimport './dashboard.sass';\n\nconst Dashboard = ({ books }) => {\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [deletedId, setDeletedId] = useState(null);\n  const [deletedTitle, setDeletedTitle] = useState(null);\n  const { push } = useHistory();\n\n  const confirmDelete = (id, title) => {\n    setDeletedId(id);\n    setDeletedTitle(title);\n    setModalIsOpen(true);\n  }\n\n  const handleDelete = (id) => {\n    fetch(`http://localhost:8000/books/${id}`, {\n      method: 'DELETE'\n    })\n  }\n\n\n\n\n  return (\n    <div>\n      <table className='table'>\n        <thead>\n          <tr>\n            <th>Book title</th>\n            <th>Author name</th>\n            <th>Category</th>\n            <th>ISBN</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {books.map((item) => {\n            return (\n              <tr key={item.id}>\n                <th>{item.title}</th>\n                <th>{item.author}</th>\n                <th>{item.category}</th>\n                <th>{item.isbn}</th>\n                <th>\n                <button\n                type=\"button\"\n                  onClick={() => push(`/edit/${item.id}`)}>\n                    Edit\n                  </button>\n                <button\n                  onClick={() => confirmDelete(item.id, item.title)}>Del</button>\n                </th>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n\n      <Modal isOpen={modalIsOpen} closeTimeoutMS={\n    0} >\n        <h2>Delete {deletedTitle} ?</h2>\n        <button onClick={() => {setModalIsOpen(false); setDeletedTitle(null); setDeletedId(null)}}>No</button>\n        <button onClick={() => {setModalIsOpen(false); setDeletedTitle(null); setDeletedId(null); handleDelete(deletedId)}}>Yes</button>\n      </Modal>\n    </div>\n  )\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}