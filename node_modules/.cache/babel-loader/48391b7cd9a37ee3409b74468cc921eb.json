{"ast":null,"code":"var _jsxFileName = \"/home/bohdan/FrontEnd/React/books/src/components/edit-book/edit-book.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport useFetch from '../hooks/useFetch';\nimport './edit-book.sass';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditBook = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [category, setCategory] = useState('');\n  const [isbn, setIsbn] = useState('');\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  const {\n    data: book,\n    error,\n    isPending\n  } = useFetch(`http://localhost:8000/books/${id}`);\n  useEffect(() => {\n    if (book) {\n      const {\n        title,\n        author,\n        category,\n        isbn\n      } = book;\n    }\n\n    setTitle(title);\n    setAuthor(author);\n    setCategory(category);\n    setIsbn(isbn);\n  }, [book]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const book = {\n      title,\n      author,\n      isbn\n    };\n    fetch('http://localhost:8000/books', {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(book)\n    }).then(() => {\n      history.push('/');\n    });\n  };\n\n  console.log(id);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-book\",\n    children: [isPending && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this), book && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Book title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        required: true,\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        for: \"author\",\n        children: \"Author name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"author\",\n        value: author,\n        onChange: e => setAuthor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => setCategory(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"classics\",\n          children: \"Classics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"detective\",\n          children: \"Detective\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"historical\",\n          children: \"Historical\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"ISBN\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"isbn\",\n        value: isbn,\n        onChange: e => setIsbn(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditBook, \"hfJG7KXrGjJer5h+EwTGtK8OgwI=\", false, function () {\n  return [useHistory, useParams, useFetch];\n});\n\n_c = EditBook;\nexport default EditBook;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditBook\");","map":{"version":3,"sources":["/home/bohdan/FrontEnd/React/books/src/components/edit-book/edit-book.js"],"names":["React","useEffect","useState","useHistory","useParams","useFetch","EditBook","title","setTitle","author","setAuthor","category","setCategory","isbn","setIsbn","history","id","data","book","error","isPending","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","push","console","log","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport useFetch from '../hooks/useFetch';\n\nimport './edit-book.sass';\n\nconst EditBook = () => {\n\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [category, setCategory] = useState('');\n  const [isbn, setIsbn] = useState('');\n\n  const history = useHistory();\n  const { id } = useParams();\n  const { data: book, error, isPending } = useFetch(`http://localhost:8000/books/${id}`)\n\n  useEffect(() => {\n    if(book) {\n    const { title, author, category, isbn } = book;\n    }\n\n    setTitle(title);\n    setAuthor(author);\n    setCategory(category);\n    setIsbn(isbn);\n  }, [book])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const book = { title, author, isbn };\n\n    fetch('http://localhost:8000/books', {\n      method: 'POST',\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(book)\n    }).then(() => {\n      history.push('/')\n    })\n  }\n\n  console.log(id)\n  return (\n    <div className='add-book'>\n      {isPending && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n      {book && (\n        <form className='form' onSubmit={handleSubmit}>\n          <label>Book title</label>\n          <input\n            type=\"text\"\n            required\n            value={title}\n            onChange={((e) => setTitle(e.target.value))}\n          />\n          <label for=\"author\">Author name</label>\n          <input\n            type=\"text\"\n            id='author'\n            value={author}\n            onChange={((e) => setAuthor(e.target.value))}\n          />\n          <label>Category</label>\n          <select\n            onChange={((e) => setCategory(e.target.value))}\n          >\n            <option value=\"classics\">Classics</option>\n            <option value=\"detective\">Detective</option>\n            <option value=\"historical\">Historical</option>\n          </select>\n          <label>ISBN</label>\n          <input\n            type=\"text\"\n            name=\"isbn\"\n            value={isbn}\n            onChange={((e) => setIsbn(e.target.value))}\n          />\n          <button type=\"submit\">Save </button>\n        </form>\n      )}\n    </div>\n  )\n}\n\nexport default EditBook"]},"metadata":{},"sourceType":"module"}